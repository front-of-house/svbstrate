import * as s from "../";
import * as presets from "../presets";

const color = {
  primary: "#ff4567",
  secondary: "#ff4567",
}

const space = {
  large: 1,
  small: 2,
  medium: 3,
}

const fontFamily = {
  mono: 'mono',
}

declare module "../" {
  interface Tokens {
    color: typeof color;
    other: [0, 1, 2];
    space: typeof space
    fontFamily: typeof fontFamily,
    padding: typeof space
    transform: keyof {
      fast: {}
    }
  }

  interface Shorthands extends s.PresetShorthands {
    foo: s.MapPropertyToToken<'color', 'color'>;
  }

  interface Macros extends s.PresetMacros {
    row: boolean
  }

//   interface Variants {
//     btn: "primary" | "secondary";
//   }

//   interface CustomProperties {
//     shadow: 'large' | 'small'
//   }
}

const theme = s.createTheme({
  tokens: {
    other: [0, 1, 2],
    color,
    space,
    fontFamily,
    lineHeight: [1.1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6],
    width: [1],
    padding: space,
  },
  shorthands: {
    ...presets.shorthands,
    foo: ["color"],
  },
  macros: {
    ...presets.macros,
    row: {
      display: "flex",
      flexDirection: "row",
    }
  },
  variants: {
    btn: {
      primary: {
        c: "primary",
      },
      secondary: {
        c: "secondary",
      },
    },
  },
  customProperties: {
    shadow(value, theme) {
      return {
      }
    }
  }
});

s.style(
  {
    padding: '20px',
    // pl: 0,
    color: 'primary',
    foo: 'primary',
    div: {
      color: "primary",
    },
    c: "primary",
    f: true,
    btn: "primary",
    ff: "mono",
    ":hover": {
      color: 'primary',
    },
    w: 5,
    other: 0,
    row: false,
    shadow: 'large',
    paddingRight: 'small',
    top: 'small',
  },
  theme
);
